[
  {
    "name": "4Medica (client) (previous company)",
    "description": "Developed healthcare applications using Typescript, React.js, Node.js/NestJS, MongoDB, FHIR, Elasticsearch, Kafka, gRPC, Redis, and Angular.\nBuilt lab order management system connecting healthcare providers, facilities, and patients.\nImplemented patient data management system across multiple applications.\nDeveloped user and organization management solutions for healthcare platforms",
    "image": "https://i.ibb.co/cbZQWbs/Pillar-Plus-Work.png"
  },
  {
    "name": "PillarPlus (previous company)",
    "description": "I have written several modules and algorithms at PillarPlus to solve complex MEP problems. I've also worked with several libraries that deal with geometry, graph and canvas to provide users with a real-time experience. At Towercop (a PillarPlus subsidiary), I worked on complex forms designs, form builder, data structuring, analytics, and other related things.\nI've also held leadership positions and played an important role in the coordination and management of the team, as well as provided insights into the codes, logics, and architecture of both the applications of the company.",
    "image": "https://i.ibb.co/cbZQWbs/Pillar-Plus-Work.png"
  },
  {
    "name": "Incoguzz",
    "description": "Using the social media app Incoguzz, you may chat with random users and post images, videos, audio, and text. You can connect with people randomly or you can connect with specific people using their username. In the same format, I also intend to include audio and video calls. I have developed a mono repository that includes a server (the app's backend), a mobile app, and other standard tools. \nFor the server, I used express, apollo graphql, mysql, and other tools. I designed the entire authentication process, which includes registration, login, password recovery, verification, and more. I used cloudinary for storage. Sendinblue for email, FFMPEG for audio extraction and video compression, sharp for image optimization, agenda for cron jobs, and many other libraries\nI used react native for my mobile app. I used apollo-client to communicate with the graphql API, redux to manage state, react-video to create a video player, and a variety of other libraries.\nTo set up a monorepo, I used turborepo.",
    "link": "https://github.com/geetesh911/incoguzz",
    "image": "https://i.ibb.co/HdB1ggd/incoguzz.jpg"
  },
  {
    "name": "Vivienth",
    "description": "My freelancing project for a medical start-up was called Vivienth.\nI created the entire authentication and authorisation system, which includes several user roles like admin, doctor, etc. I created the APIs to pull information from their chatbot, store it in the database, create doctor users, make reports, build symptoms to display in the chatbot, accept or reject patients, and many other features. I created the entire dashboard for the administrators as well as for the doctors.\nThis project's technology stack included express, postgresql, prisma, nextjs, react-query, redux, and numerous more tools and technologies.",
    "image": "https://i.ibb.co/ydQzVtL/image.png"
  },
  {
    "name": "Moodymoods",
    "description": "This is a shopping website for art supplies built with NextJS and Django. You can shop your favourite art products on this website, add them to your wish list, add them to your cart, pre-pay for your orders using the Paytm payment portal, use coupons for discounts, and track your orders. You can register or login by logging in with Facebook or manually entering your information. It also has a gallery section where you can browse art images that are exclusively available on the website. I also made an admin panel where you can easily add products, product categories, coupons, manage orders, and upload images to the gallery.\nI used Django and Postgres for the backend and NextJS for frontend",
    "link": "https://moodymoods.vercel.app/",
    "image": "https://i.ibb.co/z502BBg/moodymoods-desktop.png"
  },
  {
    "name": "Neerajkaffewala",
    "description": "This is a food blogging website where users can read blogs, find recipes, and view images posted by the author.\nFor the front-end, I used ReactJS to create a user interface for users to visit and consume the author's content. and also built an admin panel for the author to manage all of the website's content.\nFor the backend, I used NodeJS and MySQL to build all of the APIs for user-side content as well as the admin panel with proper authorization.",
    "image": "https://i.ibb.co/PCbPygq/neerajkaffewala-desktop.jpg"
  },
  {
    "name": "Portfolio Website",
    "description": "I made this portfolio website to better describe myself and to experiment with new technologies.\nTo build this site, I used Astro with SolidJS as an integration and I used Netlify forms  to submit the contact form.",
    "link": "https://geeteshladdha.netlify.app/",
    "image": "https://i.ibb.co/WtWPdMz/portfolio-website.jpg"
  }
]